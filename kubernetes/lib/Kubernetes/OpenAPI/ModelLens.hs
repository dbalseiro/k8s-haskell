{-
   Kubernetes

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   Kubernetes API version: release-1.20
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Kubernetes.OpenAPI.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Kubernetes.OpenAPI.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Kubernetes.OpenAPI.Model
import Kubernetes.OpenAPI.Core

-- * V1ConfigMap

-- | 'v1ConfigMapApiVersion' Lens
v1ConfigMapApiVersionL :: Lens_' V1ConfigMap (Maybe Text)
v1ConfigMapApiVersionL f V1ConfigMap{..} = (\v1ConfigMapApiVersion -> V1ConfigMap { v1ConfigMapApiVersion, ..} ) <$> f v1ConfigMapApiVersion
{-# INLINE v1ConfigMapApiVersionL #-}

-- | 'v1ConfigMapBinaryData' Lens
v1ConfigMapBinaryDataL :: Lens_' V1ConfigMap (Maybe (Map.Map String ByteArray))
v1ConfigMapBinaryDataL f V1ConfigMap{..} = (\v1ConfigMapBinaryData -> V1ConfigMap { v1ConfigMapBinaryData, ..} ) <$> f v1ConfigMapBinaryData
{-# INLINE v1ConfigMapBinaryDataL #-}

-- | 'v1ConfigMapData' Lens
v1ConfigMapDataL :: Lens_' V1ConfigMap (Maybe (Map.Map String Text))
v1ConfigMapDataL f V1ConfigMap{..} = (\v1ConfigMapData -> V1ConfigMap { v1ConfigMapData, ..} ) <$> f v1ConfigMapData
{-# INLINE v1ConfigMapDataL #-}

-- | 'v1ConfigMapImmutable' Lens
v1ConfigMapImmutableL :: Lens_' V1ConfigMap (Maybe Bool)
v1ConfigMapImmutableL f V1ConfigMap{..} = (\v1ConfigMapImmutable -> V1ConfigMap { v1ConfigMapImmutable, ..} ) <$> f v1ConfigMapImmutable
{-# INLINE v1ConfigMapImmutableL #-}

-- | 'v1ConfigMapKind' Lens
v1ConfigMapKindL :: Lens_' V1ConfigMap (Maybe Text)
v1ConfigMapKindL f V1ConfigMap{..} = (\v1ConfigMapKind -> V1ConfigMap { v1ConfigMapKind, ..} ) <$> f v1ConfigMapKind
{-# INLINE v1ConfigMapKindL #-}

-- | 'v1ConfigMapMetadata' Lens
v1ConfigMapMetadataL :: Lens_' V1ConfigMap (Maybe V1ObjectMeta)
v1ConfigMapMetadataL f V1ConfigMap{..} = (\v1ConfigMapMetadata -> V1ConfigMap { v1ConfigMapMetadata, ..} ) <$> f v1ConfigMapMetadata
{-# INLINE v1ConfigMapMetadataL #-}



-- * V1ConfigMapEnvSource

-- | 'v1ConfigMapEnvSourceName' Lens
v1ConfigMapEnvSourceNameL :: Lens_' V1ConfigMapEnvSource (Maybe Text)
v1ConfigMapEnvSourceNameL f V1ConfigMapEnvSource{..} = (\v1ConfigMapEnvSourceName -> V1ConfigMapEnvSource { v1ConfigMapEnvSourceName, ..} ) <$> f v1ConfigMapEnvSourceName
{-# INLINE v1ConfigMapEnvSourceNameL #-}

-- | 'v1ConfigMapEnvSourceOptional' Lens
v1ConfigMapEnvSourceOptionalL :: Lens_' V1ConfigMapEnvSource (Maybe Bool)
v1ConfigMapEnvSourceOptionalL f V1ConfigMapEnvSource{..} = (\v1ConfigMapEnvSourceOptional -> V1ConfigMapEnvSource { v1ConfigMapEnvSourceOptional, ..} ) <$> f v1ConfigMapEnvSourceOptional
{-# INLINE v1ConfigMapEnvSourceOptionalL #-}



-- * V1ConfigMapKeySelector

-- | 'v1ConfigMapKeySelectorKey' Lens
v1ConfigMapKeySelectorKeyL :: Lens_' V1ConfigMapKeySelector (Text)
v1ConfigMapKeySelectorKeyL f V1ConfigMapKeySelector{..} = (\v1ConfigMapKeySelectorKey -> V1ConfigMapKeySelector { v1ConfigMapKeySelectorKey, ..} ) <$> f v1ConfigMapKeySelectorKey
{-# INLINE v1ConfigMapKeySelectorKeyL #-}

-- | 'v1ConfigMapKeySelectorName' Lens
v1ConfigMapKeySelectorNameL :: Lens_' V1ConfigMapKeySelector (Maybe Text)
v1ConfigMapKeySelectorNameL f V1ConfigMapKeySelector{..} = (\v1ConfigMapKeySelectorName -> V1ConfigMapKeySelector { v1ConfigMapKeySelectorName, ..} ) <$> f v1ConfigMapKeySelectorName
{-# INLINE v1ConfigMapKeySelectorNameL #-}

-- | 'v1ConfigMapKeySelectorOptional' Lens
v1ConfigMapKeySelectorOptionalL :: Lens_' V1ConfigMapKeySelector (Maybe Bool)
v1ConfigMapKeySelectorOptionalL f V1ConfigMapKeySelector{..} = (\v1ConfigMapKeySelectorOptional -> V1ConfigMapKeySelector { v1ConfigMapKeySelectorOptional, ..} ) <$> f v1ConfigMapKeySelectorOptional
{-# INLINE v1ConfigMapKeySelectorOptionalL #-}



-- * V1ConfigMapList

-- | 'v1ConfigMapListApiVersion' Lens
v1ConfigMapListApiVersionL :: Lens_' V1ConfigMapList (Maybe Text)
v1ConfigMapListApiVersionL f V1ConfigMapList{..} = (\v1ConfigMapListApiVersion -> V1ConfigMapList { v1ConfigMapListApiVersion, ..} ) <$> f v1ConfigMapListApiVersion
{-# INLINE v1ConfigMapListApiVersionL #-}

-- | 'v1ConfigMapListItems' Lens
v1ConfigMapListItemsL :: Lens_' V1ConfigMapList ([V1ConfigMap])
v1ConfigMapListItemsL f V1ConfigMapList{..} = (\v1ConfigMapListItems -> V1ConfigMapList { v1ConfigMapListItems, ..} ) <$> f v1ConfigMapListItems
{-# INLINE v1ConfigMapListItemsL #-}

-- | 'v1ConfigMapListKind' Lens
v1ConfigMapListKindL :: Lens_' V1ConfigMapList (Maybe Text)
v1ConfigMapListKindL f V1ConfigMapList{..} = (\v1ConfigMapListKind -> V1ConfigMapList { v1ConfigMapListKind, ..} ) <$> f v1ConfigMapListKind
{-# INLINE v1ConfigMapListKindL #-}

-- | 'v1ConfigMapListMetadata' Lens
v1ConfigMapListMetadataL :: Lens_' V1ConfigMapList (Maybe V1ListMeta)
v1ConfigMapListMetadataL f V1ConfigMapList{..} = (\v1ConfigMapListMetadata -> V1ConfigMapList { v1ConfigMapListMetadata, ..} ) <$> f v1ConfigMapListMetadata
{-# INLINE v1ConfigMapListMetadataL #-}



-- * V1ConfigMapNodeConfigSource

-- | 'v1ConfigMapNodeConfigSourceKubeletConfigKey' Lens
v1ConfigMapNodeConfigSourceKubeletConfigKeyL :: Lens_' V1ConfigMapNodeConfigSource (Text)
v1ConfigMapNodeConfigSourceKubeletConfigKeyL f V1ConfigMapNodeConfigSource{..} = (\v1ConfigMapNodeConfigSourceKubeletConfigKey -> V1ConfigMapNodeConfigSource { v1ConfigMapNodeConfigSourceKubeletConfigKey, ..} ) <$> f v1ConfigMapNodeConfigSourceKubeletConfigKey
{-# INLINE v1ConfigMapNodeConfigSourceKubeletConfigKeyL #-}

-- | 'v1ConfigMapNodeConfigSourceName' Lens
v1ConfigMapNodeConfigSourceNameL :: Lens_' V1ConfigMapNodeConfigSource (Text)
v1ConfigMapNodeConfigSourceNameL f V1ConfigMapNodeConfigSource{..} = (\v1ConfigMapNodeConfigSourceName -> V1ConfigMapNodeConfigSource { v1ConfigMapNodeConfigSourceName, ..} ) <$> f v1ConfigMapNodeConfigSourceName
{-# INLINE v1ConfigMapNodeConfigSourceNameL #-}

-- | 'v1ConfigMapNodeConfigSourceNamespace' Lens
v1ConfigMapNodeConfigSourceNamespaceL :: Lens_' V1ConfigMapNodeConfigSource (Text)
v1ConfigMapNodeConfigSourceNamespaceL f V1ConfigMapNodeConfigSource{..} = (\v1ConfigMapNodeConfigSourceNamespace -> V1ConfigMapNodeConfigSource { v1ConfigMapNodeConfigSourceNamespace, ..} ) <$> f v1ConfigMapNodeConfigSourceNamespace
{-# INLINE v1ConfigMapNodeConfigSourceNamespaceL #-}

-- | 'v1ConfigMapNodeConfigSourceResourceVersion' Lens
v1ConfigMapNodeConfigSourceResourceVersionL :: Lens_' V1ConfigMapNodeConfigSource (Maybe Text)
v1ConfigMapNodeConfigSourceResourceVersionL f V1ConfigMapNodeConfigSource{..} = (\v1ConfigMapNodeConfigSourceResourceVersion -> V1ConfigMapNodeConfigSource { v1ConfigMapNodeConfigSourceResourceVersion, ..} ) <$> f v1ConfigMapNodeConfigSourceResourceVersion
{-# INLINE v1ConfigMapNodeConfigSourceResourceVersionL #-}

-- | 'v1ConfigMapNodeConfigSourceUid' Lens
v1ConfigMapNodeConfigSourceUidL :: Lens_' V1ConfigMapNodeConfigSource (Maybe Text)
v1ConfigMapNodeConfigSourceUidL f V1ConfigMapNodeConfigSource{..} = (\v1ConfigMapNodeConfigSourceUid -> V1ConfigMapNodeConfigSource { v1ConfigMapNodeConfigSourceUid, ..} ) <$> f v1ConfigMapNodeConfigSourceUid
{-# INLINE v1ConfigMapNodeConfigSourceUidL #-}



-- * V1ConfigMapProjection

-- | 'v1ConfigMapProjectionItems' Lens
v1ConfigMapProjectionItemsL :: Lens_' V1ConfigMapProjection (Maybe [V1KeyToPath])
v1ConfigMapProjectionItemsL f V1ConfigMapProjection{..} = (\v1ConfigMapProjectionItems -> V1ConfigMapProjection { v1ConfigMapProjectionItems, ..} ) <$> f v1ConfigMapProjectionItems
{-# INLINE v1ConfigMapProjectionItemsL #-}

-- | 'v1ConfigMapProjectionName' Lens
v1ConfigMapProjectionNameL :: Lens_' V1ConfigMapProjection (Maybe Text)
v1ConfigMapProjectionNameL f V1ConfigMapProjection{..} = (\v1ConfigMapProjectionName -> V1ConfigMapProjection { v1ConfigMapProjectionName, ..} ) <$> f v1ConfigMapProjectionName
{-# INLINE v1ConfigMapProjectionNameL #-}

-- | 'v1ConfigMapProjectionOptional' Lens
v1ConfigMapProjectionOptionalL :: Lens_' V1ConfigMapProjection (Maybe Bool)
v1ConfigMapProjectionOptionalL f V1ConfigMapProjection{..} = (\v1ConfigMapProjectionOptional -> V1ConfigMapProjection { v1ConfigMapProjectionOptional, ..} ) <$> f v1ConfigMapProjectionOptional
{-# INLINE v1ConfigMapProjectionOptionalL #-}



-- * V1ConfigMapVolumeSource

-- | 'v1ConfigMapVolumeSourceDefaultMode' Lens
v1ConfigMapVolumeSourceDefaultModeL :: Lens_' V1ConfigMapVolumeSource (Maybe Int)
v1ConfigMapVolumeSourceDefaultModeL f V1ConfigMapVolumeSource{..} = (\v1ConfigMapVolumeSourceDefaultMode -> V1ConfigMapVolumeSource { v1ConfigMapVolumeSourceDefaultMode, ..} ) <$> f v1ConfigMapVolumeSourceDefaultMode
{-# INLINE v1ConfigMapVolumeSourceDefaultModeL #-}

-- | 'v1ConfigMapVolumeSourceItems' Lens
v1ConfigMapVolumeSourceItemsL :: Lens_' V1ConfigMapVolumeSource (Maybe [V1KeyToPath])
v1ConfigMapVolumeSourceItemsL f V1ConfigMapVolumeSource{..} = (\v1ConfigMapVolumeSourceItems -> V1ConfigMapVolumeSource { v1ConfigMapVolumeSourceItems, ..} ) <$> f v1ConfigMapVolumeSourceItems
{-# INLINE v1ConfigMapVolumeSourceItemsL #-}

-- | 'v1ConfigMapVolumeSourceName' Lens
v1ConfigMapVolumeSourceNameL :: Lens_' V1ConfigMapVolumeSource (Maybe Text)
v1ConfigMapVolumeSourceNameL f V1ConfigMapVolumeSource{..} = (\v1ConfigMapVolumeSourceName -> V1ConfigMapVolumeSource { v1ConfigMapVolumeSourceName, ..} ) <$> f v1ConfigMapVolumeSourceName
{-# INLINE v1ConfigMapVolumeSourceNameL #-}

-- | 'v1ConfigMapVolumeSourceOptional' Lens
v1ConfigMapVolumeSourceOptionalL :: Lens_' V1ConfigMapVolumeSource (Maybe Bool)
v1ConfigMapVolumeSourceOptionalL f V1ConfigMapVolumeSource{..} = (\v1ConfigMapVolumeSourceOptional -> V1ConfigMapVolumeSource { v1ConfigMapVolumeSourceOptional, ..} ) <$> f v1ConfigMapVolumeSourceOptional
{-# INLINE v1ConfigMapVolumeSourceOptionalL #-}


